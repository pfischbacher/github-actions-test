name: Manage Rancher Users
on:
  workflow_dispatch: # run manually
  push:
    paths:
      - "manifests/**" # trigger only when manifests change
jobs:
  manage-users:
    runs-on: self-hosted
    env:
      # Rancher API settings
      RANCHER_URL: "https://rancher.13.208.242.148.sslip.io"
      RANCHER_API_TOKEN: ${{ secrets.RANCHER_API_TOKEN }} # Token for user with Manage Users global role

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install yq and jq
        run: |
          sudo apt-get update && sudo apt-get install -y wget jq
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.47.1/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Read user.yaml
        id: read_user
        run: |
          USERNAME=$(yq e '.username' manifests/user.yaml)
          NAME=$(yq e '.name' manifests/user.yaml)
          PASSWORD=$(yq e '.password' manifests/user.yaml)
          ENABLED=$(yq e '.enabled' manifests/user.yaml)
          GLOBAL_ROLE=$(yq e '.globalRole' manifests/user.yaml)
          PROJECT_ROLE=$(yq e '.projectRole' manifests/user.yaml)
          PROJECT_ID=$(yq e '.projectId' manifests/user.yaml)

          echo "username=$USERNAME" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "password=$PASSWORD" >> $GITHUB_OUTPUT
          echo "enabled=$ENABLED" >> $GITHUB_OUTPUT
          echo "global_role=$GLOBAL_ROLE" >> $GITHUB_OUTPUT
          echo "project_role=$PROJECT_ROLE" >> $GITHUB_OUTPUT
          echo "project_id=$PROJECT_ID" >> $GITHUB_OUTPUT

      - name: Debug Curl User
        id: debug_curl_user
        run: |
          echo "=== Testing connectivity to Rancher ==="
          curl -k -I "$RANCHER_URL" || echo "‚ùå Cannot reach Rancher URL"

          # Check token works with /v3/users
          echo "=== Testing API token ==="
          curl -k -s -o /tmp/api_test.txt -w "%{http_code}\n" \
            -H "Authorization: Bearer $RANCHER_API_TOKEN" \
            "$RANCHER_URL/v3/users"

          echo "=== API response preview ==="
          head -n 20 /tmp/api_test.txt

      - name: Create Rancher User
        id: create_user
        run: |
          echo "Username = ${{ steps.read_user.outputs.username }}"
          echo "Name = ${{ steps.read_user.outputs.name }}"
          echo "Rancher API token = $RANCHER_API_TOKEN"
          echo "Rancher URL = $RANCHER_URL"
          curl -s -k -X POST \
            -H "Authorization: Bearer $RANCHER_API_TOKEN" \
            -H 'Content-Type: application/json' \
            -d '{
                  "username": "${{ steps.read_user.outputs.username }}",
                  "name": "${{ steps.read_user.outputs.name }}",
                  "password": "${{ steps.read_user.outputs.password }}",
                  "enabled": ${{ steps.read_user.outputs.enabled }} 
                }' \
            "$RANCHER_URL/v3/users"
